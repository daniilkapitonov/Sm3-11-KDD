{\rtf1\ansi\ansicpg1251\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // 1. \uc0\u1054 \u1041 \u1066 \u1071 \u1042 \u1051 \u1045 \u1053 \u1048 \u1045  \u1048  \u1048 \u1053 \u1048 \u1062 \u1048 \u1040 \u1051 \u1048 \u1047 \u1040 \u1062 \u1048 \u1071 \
int matrix[3][4];                    // 3 \uc0\u1089 \u1090 \u1088 \u1086 \u1082 \u1080 , 4 \u1089 \u1090 \u1086 \u1083 \u1073 \u1094 \u1072 \
float table[2][3];                   // 2 \uc0\u1089 \u1090 \u1088 \u1086 \u1082 \u1080 , 3 \u1089 \u1090 \u1086 \u1083 \u1073 \u1094 \u1072 \
\
// \uc0\u1071 \u1074 \u1085 \u1072 \u1103  \u1080 \u1085 \u1080 \u1094 \u1080 \u1072 \u1083 \u1080 \u1079 \u1072 \u1094 \u1080 \u1103 \
int arr[2][3] = \{\
    \{1, 2, 3\},     // \uc0\u1057 \u1090 \u1088 \u1086 \u1082 \u1072  0\
    \{4, 5, 6\}      // \uc0\u1057 \u1090 \u1088 \u1086 \u1082 \u1072  1\
\};\
\
// \uc0\u1053 \u1077 \u1087 \u1086 \u1083 \u1085 \u1072 \u1103  \u1080 \u1085 \u1080 \u1094 \u1080 \u1072 \u1083 \u1080 \u1079 \u1072 \u1094 \u1080 \u1103  (\u1086 \u1089 \u1090 \u1072 \u1083 \u1100 \u1085 \u1099 \u1077  \u1101 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1099  = 0)\
int arr2[3][3] = \{\
    \{1, 2\},\
    \{3, 4, 5\},\
    \{6\}           // \uc0\u1055 \u1086 \u1089 \u1083 \u1077 \u1076 \u1085 \u1080 \u1081  \u1101 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090  \u1089 \u1090 \u1088 \u1086 \u1082 \u1080  = 0\
\};\
\
// 2. \uc0\u1054 \u1041 \u1056 \u1040 \u1065 \u1045 \u1053 \u1048 \u1045  \u1050  \u1069 \u1051 \u1045 \u1052 \u1045 \u1053 \u1058 \u1040 \u1052 \
matrix[0][0] = 10;        // \uc0\u1051 \u1077 \u1074 \u1099 \u1081  \u1074 \u1077 \u1088 \u1093 \u1085 \u1080 \u1081  \u1091 \u1075 \u1086 \u1083 \
x = matrix[1][2];         // \uc0\u1042 \u1090 \u1086 \u1088 \u1072 \u1103  \u1089 \u1090 \u1088 \u1086 \u1082 \u1072 , \u1090 \u1088 \u1077 \u1090 \u1080 \u1081  \u1089 \u1090 \u1086 \u1083 \u1073 \u1077 \u1094 \
matrix[i][j] = value;     // \uc0\u1047 \u1072 \u1087 \u1080 \u1089 \u1100  \u1074  \u1089 \u1090 \u1088 \u1086 \u1082 \u1091  i, \u1089 \u1090 \u1086 \u1083 \u1073 \u1077 \u1094  j\
\
// 3. \uc0\u1054 \u1041 \u1061 \u1054 \u1044  \u1052 \u1040 \u1057 \u1057 \u1048 \u1042 \u1040  (\u1042 \u1051 \u1054 \u1046 \u1045 \u1053 \u1053 \u1067 \u1045  \u1062 \u1048 \u1050 \u1051 \u1067 )\
// \uc0\u1055 \u1086  \u1089 \u1090 \u1088 \u1086 \u1082 \u1072 \u1084 \
for(int i = 0; i < rows; i++) \{           // \uc0\u1055 \u1086  \u1089 \u1090 \u1088 \u1086 \u1082 \u1072 \u1084 \
    for(int j = 0; j < cols; j++) \{       // \uc0\u1055 \u1086  \u1089 \u1090 \u1086 \u1083 \u1073 \u1094 \u1072 \u1084 \
        printf("%d ", matrix[i][j]);\
    \}\
    printf("\\n");  // \uc0\u1053 \u1086 \u1074 \u1072 \u1103  \u1089 \u1090 \u1088 \u1086 \u1082 \u1072  \u1087 \u1086 \u1089 \u1083 \u1077  \u1082 \u1072 \u1078 \u1076 \u1086 \u1081  \u1089 \u1090 \u1088 \u1086 \u1082 \u1080  \u1084 \u1072 \u1089 \u1089 \u1080 \u1074 \u1072 \
\}\
\
// \uc0\u1055 \u1086  \u1089 \u1090 \u1086 \u1083 \u1073 \u1094 \u1072 \u1084 \
for(int j = 0; j < cols; j++) \{           // \uc0\u1055 \u1086  \u1089 \u1090 \u1086 \u1083 \u1073 \u1094 \u1072 \u1084 \
    for(int i = 0; i < rows; i++) \{       // \uc0\u1055 \u1086  \u1089 \u1090 \u1088 \u1086 \u1082 \u1072 \u1084 \
        printf("%d ", matrix[i][j]);\
    \}\
    printf("\\n");\
\}\
\
// 4. \uc0\u1042 \u1042 \u1054 \u1044  \u1048  \u1042 \u1067 \u1042 \u1054 \u1044  \u1044 \u1042 \u1059 \u1052 \u1045 \u1056 \u1053 \u1054 \u1043 \u1054  \u1052 \u1040 \u1057 \u1057 \u1048 \u1042 \u1040 \
// \uc0\u1042 \u1074 \u1086 \u1076  \u1089  \u1082 \u1083 \u1072 \u1074 \u1080 \u1072 \u1090 \u1091 \u1088 \u1099 \
for(int i = 0; i < rows; i++) \{\
    for(int j = 0; j < cols; j++) \{\
        printf("matrix[%d][%d] = ", i, j);\
        scanf("%d", &matrix[i][j]);\
    \}\
\}\
\
// \uc0\u1042 \u1099 \u1074 \u1086 \u1076  \u1074  \u1074 \u1080 \u1076 \u1077  \u1090 \u1072 \u1073 \u1083 \u1080 \u1094 \u1099 \
for(int i = 0; i < rows; i++) \{\
    for(int j = 0; j < cols; j++) \{\
        printf("%4d", matrix[i][j]);  // \uc0\u1042 \u1099 \u1088 \u1072 \u1074 \u1085 \u1080 \u1074 \u1072 \u1085 \u1080 \u1077 \
    \}\
    printf("\\n");\
\}\
\
// 5. \uc0\u1041 \u1040 \u1047 \u1054 \u1042 \u1067 \u1045  \u1040 \u1051 \u1043 \u1054 \u1056 \u1048 \u1058 \u1052 \u1067 \
// \uc0\u1057 \u1091 \u1084 \u1084 \u1072  \u1074 \u1089 \u1077 \u1093  \u1101 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1086 \u1074 \
int sum = 0;\
for(int i = 0; i < rows; i++) \{\
    for(int j = 0; j < cols; j++) \{\
        sum += matrix[i][j];\
    \}\
\}\
\
// \uc0\u1055 \u1086 \u1080 \u1089 \u1082  \u1084 \u1072 \u1082 \u1089 \u1080 \u1084 \u1091 \u1084 \u1072 \
int max = matrix[0][0];\
for(int i = 0; i < rows; i++) \{\
    for(int j = 0; j < cols; j++) \{\
        if(matrix[i][j] > max) \{\
            max = matrix[i][j];\
        \}\
    \}\
\}\
\
// \uc0\u1057 \u1091 \u1084 \u1084 \u1072  \u1101 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1086 \u1074  \u1089 \u1090 \u1088 \u1086 \u1082 \u1080 \
for(int i = 0; i < rows; i++) \{\
    int row_sum = 0;\
    for(int j = 0; j < cols; j++) \{\
        row_sum += matrix[i][j];\
    \}\
    printf("\uc0\u1057 \u1091 \u1084 \u1084 \u1072  \u1089 \u1090 \u1088 \u1086 \u1082 \u1080  %d: %d\\n", i, row_sum);\
\}\
\
// \uc0\u1057 \u1091 \u1084 \u1084 \u1072  \u1101 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1086 \u1074  \u1089 \u1090 \u1086 \u1083 \u1073 \u1094 \u1072 \
for(int j = 0; j < cols; j++) \{\
    int col_sum = 0;\
    for(int i = 0; i < rows; i++) \{\
        col_sum += matrix[i][j];\
    \}\
    printf("\uc0\u1057 \u1091 \u1084 \u1084 \u1072  \u1089 \u1090 \u1086 \u1083 \u1073 \u1094 \u1072  %d: %d\\n", j, col_sum);\
\}\
\
// 6. \uc0\u1056 \u1040 \u1041 \u1054 \u1058 \u1040  \u1057  \u1043 \u1051 \u1040 \u1042 \u1053 \u1054 \u1049  \u1044 \u1048 \u1040 \u1043 \u1054 \u1053 \u1040 \u1051 \u1068 \u1070  (\u1076 \u1083 \u1103  \u1082 \u1074 \u1072 \u1076 \u1088 \u1072 \u1090 \u1085 \u1099 \u1093  \u1084 \u1072 \u1090 \u1088 \u1080 \u1094 )\
// \uc0\u1069 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1099  \u1075 \u1083 \u1072 \u1074 \u1085 \u1086 \u1081  \u1076 \u1080 \u1072 \u1075 \u1086 \u1085 \u1072 \u1083 \u1080 : matrix[0][0], matrix[1][1], ...\
for(int i = 0; i < n; i++) \{\
    printf("%d ", matrix[i][i]);  // \uc0\u1043 \u1083 \u1072 \u1074 \u1085 \u1072 \u1103  \u1076 \u1080 \u1072 \u1075 \u1086 \u1085 \u1072 \u1083 \u1100 \
\}\
\
// 7. \uc0\u1047 \u1040 \u1055 \u1054 \u1051 \u1053 \u1045 \u1053 \u1048 \u1045  \u1057 \u1051 \u1059 \u1063 \u1040 \u1049 \u1053 \u1067 \u1052 \u1048  \u1063 \u1048 \u1057 \u1051 \u1040 \u1052 \u1048 \
#include <stdlib.h>\
#include <time.h>\
\
srand(time(NULL));\
for(int i = 0; i < rows; i++) \{\
    for(int j = 0; j < cols; j++) \{\
        matrix[i][j] = rand() % 100;  // \uc0\u1063 \u1080 \u1089 \u1083 \u1072  \u1086 \u1090  0 \u1076 \u1086  99\
    \}\
\}\
\
// 8. \uc0\u1055 \u1054 \u1051 \u1045 \u1047 \u1053 \u1067 \u1045  \u1050 \u1054 \u1053 \u1057 \u1058 \u1040 \u1053 \u1058 \u1067 \
#define ROWS 5\
#define COLS 4\
int table[ROWS][COLS];  // \uc0\u1048 \u1089 \u1087 \u1086 \u1083 \u1100 \u1079 \u1086 \u1074 \u1072 \u1085 \u1080 \u1077  \u1082 \u1086 \u1085 \u1089 \u1090 \u1072 \u1085 \u1090 }