{\rtf1\ansi\ansicpg1251\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // 1. \uc0\u1054 \u1041 \u1066 \u1071 \u1042 \u1051 \u1045 \u1053 \u1048 \u1045  \u1052 \u1040 \u1057 \u1057 \u1048 \u1042 \u1054 \u1042 \
int arr[10];                    // \uc0\u1052 \u1072 \u1089 \u1089 \u1080 \u1074  \u1080 \u1079  10 \u1094 \u1077 \u1083 \u1099 \u1093  \u1095 \u1080 \u1089 \u1077 \u1083 \
float prices[5];               // \uc0\u1052 \u1072 \u1089 \u1089 \u1080 \u1074  \u1080 \u1079  5 \u1076 \u1088 \u1086 \u1073 \u1085 \u1099 \u1093  \u1095 \u1080 \u1089 \u1077 \u1083 \
#define SIZE 100               // \uc0\u1050 \u1086 \u1085 \u1089 \u1090 \u1072 \u1085 \u1090 \u1072  \u1076 \u1083 \u1103  \u1088 \u1072 \u1079 \u1084 \u1077 \u1088 \u1072 \
int numbers[SIZE];\
\
// 2. \uc0\u1048 \u1053 \u1048 \u1062 \u1048 \u1040 \u1051 \u1048 \u1047 \u1040 \u1062 \u1048 \u1071 \
int arr1[5] = \{1, 2, 3, 4, 5\}; // \uc0\u1071 \u1074 \u1085 \u1072 \u1103  \u1080 \u1085 \u1080 \u1094 \u1080 \u1072 \u1083 \u1080 \u1079 \u1072 \u1094 \u1080 \u1103 \
int arr2[] = \{1, 2, 3\};        // \uc0\u1040 \u1074 \u1090 \u1086 \u1084 \u1072 \u1090 \u1080 \u1095 \u1077 \u1089 \u1082 \u1080 \u1081  \u1088 \u1072 \u1079 \u1084 \u1077 \u1088  (3 \u1101 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1072 )\
int arr3[10] = \{0\};            // \uc0\u1042 \u1089 \u1077  \u1101 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1099  = 0\
\
// 3. \uc0\u1054 \u1057 \u1053 \u1054 \u1042 \u1053 \u1067 \u1045  \u1054 \u1055 \u1045 \u1056 \u1040 \u1062 \u1048 \u1048 \
arr[0] = 10;                   // \uc0\u1047 \u1072 \u1087 \u1080 \u1089 \u1100  \u1074  \u1084 \u1072 \u1089 \u1089 \u1080 \u1074 \
x = arr[4];                    // \uc0\u1063 \u1090 \u1077 \u1085 \u1080 \u1077  \u1080 \u1079  \u1084 \u1072 \u1089 \u1089 \u1080 \u1074 \u1072 \
arr[i] = arr[i] + 1;           // \uc0\u1048 \u1079 \u1084 \u1077 \u1085 \u1077 \u1085 \u1080 \u1077  \u1101 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1072 \
\
// 4. \uc0\u1054 \u1041 \u1061 \u1054 \u1044  \u1052 \u1040 \u1057 \u1057 \u1048 \u1042 \u1040  (\u1062 \u1048 \u1050 \u1051 )\
for(int i = 0; i < n; i++) \{   // i \uc0\u1086 \u1090  0 \u1076 \u1086  n-1\
    printf("%d ", arr[i]);\
\}\
\
// 5. \uc0\u1063 \u1040 \u1057 \u1058 \u1054  \u1048 \u1057 \u1055 \u1054 \u1051 \u1068 \u1047 \u1059 \u1045 \u1052 \u1067 \u1045  \u1040 \u1051 \u1043 \u1054 \u1056 \u1048 \u1058 \u1052 \u1067 \
// \uc0\u1055 \u1086 \u1080 \u1089 \u1082  \u1084 \u1072 \u1082 \u1089 \u1080 \u1084 \u1091 \u1084 \u1072 \
max = arr[0];\
for(int i = 1; i < n; i++) \{\
    if(arr[i] > max) max = arr[i];\
\}\
\
// \uc0\u1057 \u1091 \u1084 \u1084 \u1072  \u1101 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1086 \u1074 \
sum = 0;\
for(int i = 0; i < n; i++) \{\
    sum += arr[i];\
\}\
\
// \uc0\u1055 \u1086 \u1080 \u1089 \u1082  \u1101 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1072 \
found = -1;\
for(int i = 0; i < n; i++) \{\
    if(arr[i] == target) \{\
        found = i;\
        break;\
    \}\
\}}